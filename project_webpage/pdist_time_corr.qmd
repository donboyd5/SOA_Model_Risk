---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Investment returns correlated over time

A multivariate normal distribution with returns correlated over time, parameterized by mean, standard deviation, and a correlation matrix.


```{r}
# estimate AR(1) model

# Convert the returns to a time series
rts <- ts(retport$sp500, start = retport$year[1])
rts_ar1 <- Arima(rts, order = c(1, 0, 0))  # Fit an AR(1) model
summary(rts_ar1)
coeftest(rts_ar1)
str(coef_test)
p_value <- coef_test["ar1", 4]

# rolling ar1 models
f <- function(vec){
  if(any(is.na(vec)) | length(vec) < 30) return(list(phi=NULL, pval=NULL))
  return(list(phi=NULL, pval=NULL))
  print(vec)
  rts <- ts(vec, start = 1)
  rts_ar1 <- Arima(rts, order = c(1, 0, 0))  # fit AR(1) model
  stats <- coeftest(rts_ar1)
  list(phi=stats["ar1", 1], pval=stats["ar1", 4])
}
f(retport$sp500)
f(c(1, 2, 3, 4, 5, NA_real_, 6, 7))

roll <- retport |> 
  select(year, sp500) |> 
  mutate(retroll=zoo::rollapplyr(sp500, width=30, FUN=f,
                                 align="right", fill=NA)),
         n=retroll[, 1],
         min=retroll[, 2],
         max=retroll[, 3],
         mean=retroll[, 4],
         sd=retroll[, 5],
         skew=retroll[, 6],
         xkurt=retroll[, 7])

f <- function(vec){
  mean <- mean(vec)
  sd <- sd(vec)
  list(mean=mean, sd=sd)
}


f <- function(vec){
  rts <- ts(vec, start = 1)
  rts_ar1 <- Arima(rts, order = c(1, 0, 0))  # fit AR(1) model
  stats <- coeftest(rts_ar1)
  list(phi=stats["ar1", 1], pval=stats["ar1", 4])
}

f2 <- rollify(f, window = 30, na_value=list(phi=NA_real_, pval=NA_real_), unlist = FALSE)

roll <- retport |> 
  select(year, sp500) |> 
  mutate(mylist=f2(sp500)) |> 
  unnest_wider(col = mylist) |> 
  mutate(signif=pval < .05)

roll |> 
  filter(!is.na(phi)) |> 
  ggplot(aes(year, phi)) +
  geom_line(colour="blue") +
  geom_point(aes(colour=signif), size=1) +
  geom_hline(yintercept = 0) +
  scale_colour_manual(values=c("blue", "red")) +
  scale_x_continuous(breaks=seq(1950, 2030, 5)) +
  ggtitle("Rolling 30-year measure of mean reversion in annual S&P 500 total returns",
          subtitle="Negative values can suggest mean reversion. Coefficients significantly different from zero at p < 0.05 (if any) marked in red") +
  labs(x=NULL, y="phi (AR(1) coefficient)",
       caption="Each observation is the AR(1) coefficient estimated from a (1, 0, 0) ARIMA model of annual investment returns over 30 years") +
  theme_bw()  +
  legend_none +
  caption_left
  










sp500 <- readRDS(here::here("data", "sp500_daily_yahoofinance.rds")) |> 
  # filter(days==1) |> 
  filter(year(date) %in% 1928:2022) #|>   filter(year(date) >= 1960)
data <- sp500 |> 
  filter(year(date) >= 1950)

daily <- data  |> 
    group_by(symbol)  |> 
    tq_transmute(select     = adjusted, 
                 mutate_fun = periodReturn, 
                 period     = "daily", 
                 type       = "arithmetic")
dts <- ts(daily$daily.returns, start = c(1950, 01, 03), frequency=252)
dts_ar1 <- Arima(dts, order = c(1, 0, 0))
summary(dts_ar1)
phi <- coef(dts_ar1)["ar1"]
coef_test <- coeftest(dts_ar1)
str(coef_test)
p_value <- coef_test["ar1", 4]



```


```{r}

# Define parameters
mu <- 0.07
phi <- -0.20  # the coefficient on AR(1) term
sd <- 0.10
n <- 1000  # number of years to simulate

# Initialize the series
X <- numeric(n)
X[1] <- mu  # start the series at the mean

# Generate the AR(1) series
set.seed(123)  # for reproducibility
for (t in 2:n) {
  e <- rnorm(1, mean = 0, sd = sd)
  X[t] <- mu + phi * (X[t-1] - mu) + e
}

# Plot the series
plot(X[1:50], type = "l", main = "Simulated Investment Returns", ylab = "Return", xlab = "Year")

tibble(year=1:length(X), ir=X) |> 
  filter(row_number()<=50) |> 
  ggplot(aes(year, ir)) +
  geom_line() +
  geom_point() +
  geom_hline(yintercept = 0) +
  geom_hline(yintercept = mu, linetype="dashed") +
  theme_bw()


```

