---
output: html_document
editor_options:
  chunk_output_type: console
---

# Portfolios

After ACLI results are saved as a long file with results by scenario and asset class, we need to create portfolios from the asset classes.

We create two portfolios, based on Gang's investigation: a "high equity" portfolio reasonable consistent with public pension plans in the United States, and a "high fixed" portfolio reasonably consistent with private pension plans in the United States.

## Setup

```{r}
#| label: setup
#| output: false

source(here::here("report", "_common.R"))

```

## Define portfolios to be created from ACLI asset-class results

The portfolios Gang constructed can be found [here](https://docs.google.com/spreadsheets/d/1c5qQ5XTNFq1iiMSs05NYaH23kVw1LQZk5fdxus3l4Ok/edit#gid=0) â€“ screenshot below, followed by some sourcing information.

![](images/clipboard-4005543681.png)

![](images/clipboard-1522846233.png)

![](images/clipboard-528079377.png)

## Create weights for the highfixed and highequity portfolios

Get the weights and ensure they sum to 1.

```{r}
#| label: weights
#| output: false

weights1 <- read_delim(
"fnbase;label;highfixed;highequity
aggr;Emerging Markets, NASDAQ, Hang Seng;15.0;30.1
balanced;60% Diversified Equity + 40% Fixed Income;22.9;21.3
fixed;65% Intermediate term govt bond + 35 long term corporate bond;10.4;4.3
hy;High Yield US corporate bonds;10.4;4.3
ig_1_5;Intermedate term corporate bonds;10.4;4.3
ig_long;Long term corporate bonds;13.3;6.4
int;International equity;5.9;9.7
small;US Small Cap;5.9;9.7
us;US Big Cap;5.9;9.7
", delim=";")

weights1 |> 
  summarise(across(c(highfixed, highequity), sum))

weights <- weights1 |>
  pivot_longer(-c(fnbase, label), names_to = "porttype", values_to = "weight") |> 
  mutate(weight=weight / sum(weight), .by=porttype)

# ensure that weights sum to 1 for each portfolio
weights |> 
  summarise(weight=sum(weight), .by=porttype)


```

## Construct portfolios

Get the previously created ACLI scenarios long dataframe and construct the two portfolios for each scenario.

```{r}
#| label: construct-portfolios
#| output: false


slong <- readRDS(here::here("data", "acli_scenarios.rds"))

# wtdslong has twice as many records as slong -- each asset class has the relevant highfixed or highequity weight
wtdslong <- slong |> 
  left_join(weights, by = join_by(fnbase),
            relationship = "many-to-many")

# collapse by scenario, sim, year, and portfolio type

portfolios <- wtdslong |> 
  mutate(return_share=logreturn * weight) |> 
  summarise(logreturn=sum(return_share), .by=c(scenario, sim, year, porttype)) |> 
  mutate(logreturn=ifelse(year==0, 0, logreturn)) |> # we don't have a return in year 0, set to zero
  arrange(scenario, porttype, sim, year) |> 
  # calc assets two ways - they are equivalent so we don't do the arithmetic approach
  # mutate(areturn=exp(logreturn) - 1,
  #        aasset=cumprod(1 + areturn), .by=c(scenario, sim, porttype)) |> # arithmetic asset
  mutate(asset=exp(cumsum(logreturn)),
         .by=c(scenario, sim, porttype)) |> 
  select(scenario, porttype, sim, year, logreturn, asset)

saveRDS(portfolios, here::here("data", "acli_portfolios.rds"))

```

## Explore portfolios (if wanted)

```{r}
#| label: explore
#| output: false

# take a quick look at the result
y30 <- portfolios |> 
  filter(year==30) |> 
  summarise(asset=median(asset), .by=c(scenario, porttype))
  
y30 |> arrange(desc(asset))

```
