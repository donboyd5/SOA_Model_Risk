---
output: html_document
editor_options:
  chunk_output_type: console
---

# Portfolios

After ACLI results are saved as a long file with results by scenario and asset class, we need to create portfolios from the asset classes.

We create two portfolios, based on Gang's investigation: a "high equity" portfolio reasonable consistent with public pension plans in the United States, and a "high fixed" portfolio reasonably consistent with private pension plans in the United States.

## Setup

```{r}
#| label: setup
#| output: false

source(here::here("report", "_common.R"))

```

## Define portfolios to be created from ACLI asset-class results

The portfolios Gang constructed can be found [here](https://docs.google.com/spreadsheets/d/1c5qQ5XTNFq1iiMSs05NYaH23kVw1LQZk5fdxus3l4Ok/edit#gid=0) â€“ screenshot below, followed by some sourcing information.

![](images/clipboard-4005543681.png)

![](images/clipboard-1522846233.png)

![](images/clipboard-528079377.png)

## Create weights for the highfixed and highequity portfolios

Get the weights and ensure they sum to 1.

```{r}
#| label: weights
#| output: false

weights1 <- read_delim(
"fnbase;label;highfixed;highequity
aggr;Emerging Markets, NASDAQ, Hang Seng;15.0;30.1
balanced;60% Diversified Equity + 40% Fixed Income;22.9;21.3
fixed;65% Intermediate term govt bond + 35 long term corporate bond;10.4;4.3
hy;High Yield US corporate bonds;10.4;4.3
ig_1_5;Intermedate term corporate bonds;10.4;4.3
ig_long;Long term corporate bonds;13.3;6.4
int;International equity;5.9;9.7
small;US Small Cap;5.9;9.7
us;US Big Cap;5.9;9.7
", delim=";")

weights1 |> 
  summarise(across(c(highfixed, highequity), sum))

weights <- weights1 |>
  pivot_longer(-c(fnbase, label), names_to = "porttype", values_to = "weight") |> 
  mutate(weight=weight / sum(weight), .by=porttype)

# ensure that weights sum to 1 for each portfolio
weights |> 
  summarise(weight=sum(weight), .by=porttype)

# get equity share of each portfolio
weights |> 
  mutate(equity=case_when(
    fnbase %in% c("aggr", "int", "small", "us") ~ weight,
    fnbase == "balanced" ~ weight * .60,
    .default = 0)) |> 
  summarise(equity=sum(equity), .by=porttype)



```

## Construct portfolios

Get the previously created ACLI scenarios long dataframe and construct the two portfolios for each scenario.

```{r}
#| label: construct-portfolios
#| output: false


slong <- readRDS(here::here("data", "acli_scenarios.rds"))

# wtdslong has twice as many records as slong -- each asset class has the relevant highfixed or highequity weight
wtdslong <- slong |> 
  left_join(weights, by = join_by(fnbase),
            relationship = "many-to-many")

# collapse by scenario, sim, year, and portfolio type

# arithmetic portfolio returns are commented out
# portfolios <- wtdslong |> 
#   mutate(return_share=logreturn * weight) |> 
#   summarise(logreturn=sum(return_share), .by=c(scenario, sim, year, porttype)) |> 
#   mutate(logreturn=ifelse(year==0, 0, logreturn)) |> # we don't have a return in year 0, set to zero
#   arrange(scenario, porttype, sim, year) |> 
#   # calc assets two ways - they are equivalent so we don't do the arithmetic approach
#   # mutate(areturn=exp(logreturn) - 1,
#   #        aasset=cumprod(1 + areturn), .by=c(scenario, sim, porttype)) |> # arithmetic asset
#   mutate(asset=exp(cumsum(logreturn)),
#          .by=c(scenario, sim, porttype)) |> 
#   select(scenario, porttype, sim, year, logreturn, asset)

  # port_aret <- (exp(lrassets) -1) %*% weights # arithmetic return of portfolio
  # log(1 + port_aret) |> as.vector()  # log returns of the portfolio

portfolios <- wtdslong |> 
  # mutate(return_share=logreturn * weight) |> 
  mutate(areturn=exp(logreturn) - 1,
         areturn_share=areturn * weight) |> 
  summarise(areturn=sum(areturn_share), .by=c(scenario, sim, year, porttype)) |> 
  mutate(logreturn=log(1 + areturn),
         logreturn=ifelse(year==0, 0, logreturn)) |> # we don't have a return in year 0, set to zero
  arrange(scenario, porttype, sim, year) |> 
  # calc assets two ways - they are equivalent so we don't do the arithmetic approach
  # mutate(areturn=exp(logreturn) - 1,
  #        aasset=cumprod(1 + areturn), .by=c(scenario, sim, porttype)) |> # arithmetic asset
  mutate(asset=exp(cumsum(logreturn)),
         .by=c(scenario, sim, porttype)) |> 
  select(scenario, porttype, sim, year, logreturn, asset)

saveRDS(portfolios, here::here("data", "acli_portfolios.rds"))

```

## Explore portfolios (if wanted)

```{r}
#| label: explore
#| output: false

# take a quick look at the result
y30 <- portfolios |> 
  filter(year==30) |> 
  summarise(asset=median(asset), .by=c(scenario, porttype))
  
y30 |> arrange(desc(asset))

```

## Graph of means and standard deviations of scenarios and portfolios

Note that:

-   Returns and volatility generally are greater for the high equity portfolio than the high fixed portfolio
-   sigma_v (volatility of volatility) 90% MOE variation is much greater than variation for other parameters
-   tau variation is next greatest
-   phi variation is minimal
-   sigma_v has big impacts on both mean and standard deviation; other parameters have far greater impact on sd than on mean

```{r}
#| label: get-plot-data

# df <- readRDS(here::here("data", "acli_and_comparison_portfolios.rds"))

portfolios <- readRDS(here::here("data", "acli_portfolios.rds"))

df <- portfolios |> 
  filter(year != 0) |> 
  summarise(mean=mean(logreturn),
            sd=sd(logreturn),
            .by=c(scenario, porttype))

```

```{r}
#| label: scenario-portfolio-plot
#| output: true

p <- df |> 
  filter(!str_detect(scenario, "rho")) |> 
  mutate(porttype=factor(porttype,
                         levels=c("highequity", "highfixed"),
                         labels=c("High equity", "High fixed"))) |> 
  ggplot(aes(mean, sd, colour=porttype, label=scenario)) +
  geom_point() +
  geom_text_repel(vjust = -0.5, hjust = 0.5, min.segment.length = .5, max.overlaps = 15) +
  scale_color_manual(values=c("darkgreen", "blue")) +
  scale_x_continuous(name="mean", 
                     breaks = seq(0, 1, .005),
                     labels = scales::percent_format(accuracy = .01),
                     limits = c(0.03, 0.085)) +
  scale_y_continuous(name="standard deviation", 
                     breaks = seq(0, 1, .01),
                     labels = scales::percent_format(accuracy = .1)) +
  ggtitle(label = "Mean and standard deviation of returns for the complex ESG",
          subtitle = "Under alternative scenarios and portfolios") +
  guides(col= guide_legend(title= "Portfolio\ntype")) +
  theme_bw()
p

ggsave(here::here(rptdir, "results", "esg_meansd.png"),
       scale=1.1, width=9, height = 9)

```

## More readable plot

Drop the rho scenarios as they do not vary from baseline.

Plot just the high equity portfolio, for greater readability.

```{r}
#| label: scenario-portfolio-panel-plots
#| output: true

df |> 
  filter(!str_detect(scenario, "rho"), porttype=="highequity") |> 
  ggplot(aes(mean, sd, label=scenario)) +
  geom_point(colour="blue") +
  geom_text_repel(vjust = -0.5, hjust = 0.5, max.overlaps = 15, colour="blue") +
  # scale_color_manual(values=c("red", "blue")) +
  scale_x_continuous(name="mean", 
                     breaks = seq(0, 1, .0025),
                     labels = scales::percent_format(accuracy = .01)) +
  scale_y_continuous(name="standard deviation", 
                     breaks = seq(0, 1, .01),
                     labels = scales::percent_format(accuracy = .1)) +
  ggtitle(label = "Mean and standard deviation for ACLI scenarios",
          subtitle = "ACLI scenarios and portfolios") +
  theme_bw()


```
