---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Risk evaluation

Analyze the pension model results previously created.

Summarize the results for each scenario (each row of the result tibble) by unnesting it to allow access to all of the sims and all of the years, calculating summary statistics such as percentiles of the funded ratio or more-sophisticated measures of risk (to come, after Gang's analysis).


## Setup

```{r}
#| label: setup
#| output: false

source(here::here("report", "_common.R"))

slv_scen_names <- read_csv(
"scenario,parm,parmdesc,scendesc
gaussmod, none, none, slv model with gaussian errors
tmod, df, degrees of freedom, slv model with heavy tails
skewmod, alpha, skewness parameter, slv model with skewed returns
levmod, rho, correlation parameter, slv model with volatility correlated with returns") |> 
  mutate(framework="slv")
slv_scen_names

acli_scen_names <- readRDS(here::here("data", "acli_scenario_names.rds"))

scen_names <- bind_rows(
  slv_scen_names,
  acli_scen_names) |> 
  relocate(framework)

```


## Functions to implement Gang's risk measures

Put the functions here for now. Later put them in a separate file.

-   **VaR_loss**: Worst (alpha percentile) asset loss at the end of year t (e.g., 5)


```{r}
#| label: risk-functions
#| output: false

# https://github.com/gchen3/pensionALM/blob/main/alm.R

# Using simulation method to calculate VaR_loss, VaR_erc, VaR_uaal at 95% and 99% over t time period
# Note: Monte Carlo simulation method for VaR: Under the Monte Carlo method, Value at Risk is calculated by randomly 
# creating a number of scenarios for future rates to estimate the change in value for each scenario, 
# and then calculating the VaR according to the worst losses.

VaR_loss <- function(alpha, t, res) {
  # Worst (alpha percentile) asset loss at the end of year t
  res_cut <- res |> filter(year==t)
  assets_tail <- quantile(res_cut$assets, (1-alpha)) # assets at the tail
  assets_initial <- res$assets[1] # first simulation in first year
  
  VaR_loss <-assets_tail - assets_initial
  VaR_loss_per <- VaR_loss / assets_initial # asset % reduction in year t at 1-alpha percentile
  
  return(VaR_loss_per)
  # VaR_loss(alpha=0.95, t=2, res=test)
  }


VaR_erc <- function(alpha, t, res) {
  # ERC amount at year t, alpha percentile
  res_cut <- res |> filter(year==t) # data in year t
  erc_tail <- quantile(res_cut$contrib, alpha) # contribution at alpha percentile
  erc_initial <- res$contrib[1] # initial contribution
  
  VaR_erc_jump <- erc_tail - erc_initial
  VaR_erc_jump_per <-  VaR_erc_jump / erc_initial # percentage jump in erc at alpha percentile in year t

  # revisit whether to return all these values  
  # output <- list(erc_tail=erc_tail, 
  #                VaR_erc_jump=VaR_erc_jump, 
  #                VaR_erc_jump_per=VaR_erc_jump_per)
  
  output <- VaR_erc_jump_per # for now, return a scalar
  
  return(output)
  # VaR_erc(alpha=0.95, t=10, res=test)
}


VaR_uaal <- function(alpha, t, res) {
  # fr in year t, at 1 - alpha percentile 
  res_cut <- res |> filter(year==t)
  VaR_fr <- quantile(res_cut$fr, (1-alpha)) # fr at the 1-alpha percentile
  # just return the VaR_fr since VaR_uaal is easily computable if desired
  return(VaR_fr)
  # VaR_uaal(alpha=0.95, t=10, res=test)
}


prob_fr <- function(fr_threshold, t, res) {
  # Probability of funded ratio falling below x% at the end of t years
  
  res_cut <- res |> filter(year==t)
  n_below <- sum(res_cut$fr < fr_threshold)
  n_percent = n_below / nrow(res_cut)
  return(n_percent)
  # prob_fr(fr_threshold=0.8, t=5, res=test)
 }


prob_erc <- function(erc_threshold, t, res) {
  # Probability of contribution rate higher than x% of payroll at the end of t years
  # See CalPERS "Probability of Employer Contribution Rates Exceeding Given Level (at any point in next 30 years)"
  
  res_cut <- res |> 
    filter(year==t) |> 
    mutate(erc_rate= contrib / payroll)
  
  n_above <- sum(res_cut$erc_rate > erc_threshold)
  n_percent <- n_above / nrow(res_cut)
  return(n_percent)
  # prob_erc(erc_threshold=0.30, t=4, res=test)
}


```


## Get saved pension model results

Get data, show the nested data, and show the head and tail of one scenario unnested.

```{r}
#| label: get-penmod-results
#| output: false

result <- readRDS(here::here("data", "allscen_and_comparison_penmod.rds"))

result

result |> 
  slice_head(n=2) |> 
  select(-lrmat) |> 
  unnest(penmod) |> 
  ht()

result |> 
  select(-lrmat) |> 
  filter(scenario=="baseline") |> 
  unnest(col=penmod) |> 
  ht()

```


## Construct risk measures from pension model results


```{r}
#| label: risk-measures
#| output: false

riskmeasures1 <- result |> 
  # weed out bad results
  filter(!(framework=="acli" & str_detect(scenario, "rho"))) |> # rho doesn't affect ACLI results
  filter(!(framework=="slv" & scenario=="tmod")) |>  # t models did not work well for slv models
  # NOTE: leaves us with about 60 framework-scenario-portfolio-modtype combinations
  select(-c(lrmat, mean, sd)) |> # we don't need these
  unnest(col=penmod) |> # 6.66 million observations
  summarise(mean=first(mean_model),
            sd=first(sd_model),
            vloss_a95t10 = VaR_loss(alpha=0.95, t=10, res=pick(everything())), # asset loss at alpha percentile, year t
            verc_a95t10 = VaR_erc(alpha=0.95, t=10, res=pick(everything())), # ERC amount at year t, alpha percentile
            vuaal_a95t10 = VaR_uaal(alpha=0.95, t=10, res=pick(everything())), # fr in year t, (1 - alpha) percentile 
            probfr_fr70t10 = prob_fr(fr_threshold=0.7, t=10, res=pick(everything())), # prob FR below x% at end year t
            proberc_erc20t10 = prob_erc(erc_threshold=0.20, t=10, res=pick(everything())), # prob ERC above x% payroll at end year t
            mdn_frt10=median(fr[year==10]), # median FR at end year t
            .by=c(framework, scenario, porttype, modtype)) # 60 combos

riskmeasures <- riskmeasures1 |> 
  pivot_longer(-c(framework, scenario, porttype, modtype, mean, sd),
               names_to = "measure") |> # 6 measures for each combo=360 recs
  pivot_wider(names_from = modtype) |> # 3 modtypes means 120 recs
  relocate(measure) |> 
  relocate(model, .after = rnormal) |> 
  mutate(diff=model - rnormal) |> 
  left_join(scen_names |> 
              select(framework, scenario, scendesc), 
            by = join_by(framework, scenario)) |> 
  relocate(scendesc) |> 
  arrange(measure, framework, scenario, porttype)

riskmeasures

riskmeasures |> 
  arrange(porttype, measure, scenario)

riskmeasures |> 
  filter(framework=="acli", scenario=="baseline", porttype=="highequity")

riskmeasures |> 
  filter(scenario=="baseline", porttype=="highfixed")

```



## OLD Exploratory analysis

Take a look at a couple of simple results before running Gang's risk measures. Here we look at the median funded ratio at 30 years.

```{r}
#| label: explore-data

tabdata <- result |> 
  filter(!str_detect(scenario, "rho")) |> 
  select(scenario, porttype, modtype, nsims, nyears, mean_model, sd_model, penmod) |> 
  unnest(col=penmod) |> 
  filter(year==30) |> 
  summarise(
    mean_model=first(mean_model),
    sd_model=first(sd_model),
    frmdn=median(fr), .by=c(scenario, porttype, modtype)) |> 
  pivot_wider(names_from = modtype, values_from = frmdn) |> 
  select(porttype, scenario, mean_model, sd_model, constant, rnormal, acli)

# tabdata |> 
#   arrange(porttype, scenario) |> 
#   kable(digits=3)

```

### Year 30 median funded ratio, modeled investment returns, deterministic, and random normal returns

This table compares, for each scenario, the median funded ratio at 30 years using ACLI-modeled investment return to the funded ratio using a random normal distribution with the same mean and standard deviation. It is sorted by the largest difference in median funded ratio between modeled and random normal returns.

Observations:

-   In general, the differences from random normal at 30 years hardly look large - the most is 2 percentage points after 30 years. We can easily see swings of 2 percent or more in a single year.

-   Partly, this is because of automatic adjustments built into pension funding - if returns are low, contributions go up, helping to stabilize the funded ratio. That is why we need to look at contributions also. This suggests there's value in just looking at cumulative returns, without considering contributions, to help understand the pure effects of alternative returns. I probably should do that.

-   Modeled median funded ratio is always slightly higher than the random normal counterpart, even though mean log return and sd of log return is virtually identical for both.

-   The difference is much greater for the high fixed-income portfolio than for the high equity portfolio. In these portfolios, mean returns (and standard deviations) are lower than in the high equity portfolios and so median funded ratios are lower as well, but this doesn't explain why the difference from random normal would be large.


```{r}
#| label: explore-table
#| output: true

tabdata |>  
  arrange(porttype, scenario) |> 
  mutate(diff_vsrnorm=acli - rnormal) |> 
  left_join(scen_names |> 
              select(scenario, scendesc), by = join_by(scenario)) |> 
  relocate(scendesc) |> 
  arrange(desc(diff_vsrnorm)) |> 
  gt() |> 
  tab_header(
    title = html("Median funded ratio at 30 years for different scenarios and portfolio types - sorted by difference from normal"),
    subtitle = html("Modeled portfolio, deterministic (same mean, sd=0), and random normal (same mean, sd)")
  ) |>
  tab_spanner(columns = contains("_model"),
              label="Portfolio mean and sd of log returns") |>
  tab_spanner(columns = c(constant, rnormal, acli, diff_vsrnorm),
              label="Median funded ratio at 30 years") |>
  cols_label(mean_model="mean",
             sd_model="sd",
             constant="Deterministic",
             rnormal=html("Random<br>normal"),
             acli = html("Model"),
             diff_vsrnorm = html("Model<br>minus<br>normal")) |>
  fmt_percent(columns=-c(scendesc, scenario, porttype),
             scale=1,
             decimals=1) |>
  opt_row_striping()

```

### Year 30 median funded ratio, comparison to baseline for same portfolio type and model type

Modeled investment returns, deterministic, and random normal returns

Here the funded ratio baseline is median FR in year 30 for baseline scenario with random normal returns, for the same portfolio type.

frmdn is the median FR in year 30 for the ACLI model.

frdiff is model minus baseline (random normal).

Probably need to think about a better way to compare to baseline.

```{r}

tabdata <- result |> 
  filter(!str_detect(scenario, "rho")) |> 
  select(scenario, porttype, modtype, nsims, nyears, mean_model, sd_model, penmod) |> 
  unnest(col=penmod) |> 
  filter(year==30) |> 
  summarise(
    mean_model=first(mean_model),
    sd_model=first(sd_model),
    frmdn=median(fr), .by=c(scenario, porttype, modtype)) |> 
  group_by(porttype) |> 
  mutate(frbaseline=frmdn[scenario=="baseline" & modtype=="rnormal"],
         frdiff=frmdn - frbaseline) |> 
  relocate(frbaseline, .after=sd_model) |> 
  ungroup() |> 
  filter(scenario != "baseline") |> 
  arrange(porttype, desc(frdiff))

tabdata |> 
  kable(digits=3)
  
```



<!-- ```{r} -->
<!-- #| label: explore-plot -->


<!-- tabdata |>  -->
<!--   ggplot(aes(rnormal, model, colour=porttype, label=scenario)) + -->
<!--   geom_point() + -->
<!--   # geom_text_repel(vjust = -0.5, hjust = 0.5, max.overlaps = 15) + -->
<!--   geom_text(vjust = -0.5, hjust = 0.5) + -->
<!--   geom_abline(slope=1) + -->
<!--   scale_color_manual(values=c("red", "blue")) + -->
<!--   scale_x_continuous(name="Funded ratio with random normal returns corresponding to model (same mean, sd)",  -->
<!--                      breaks = seq(0, 1, .05), -->
<!--                      labels = scales::percent_format(accuracy = .1)) + -->
<!--   scale_y_continuous(name="Funded ratio with ACLI-modeled returns",  -->
<!--                      breaks = seq(0, 1, .05), -->
<!--                      labels = scales::percent_format(accuracy = .1)) + -->
<!--   ggtitle(label = "Median funded ratio at 30 years", -->
<!--           subtitle = "ACLI scenarios and portfolios") + -->
<!--   guides(col= guide_legend(title= "Portfolio\ntype")) + -->
<!--   theme_bw() -->

<!-- ``` -->


<!-- ### Comparison to baseline for the same portfolio type -->


<!-- ```{r} -->
<!-- #| label: explore-baseline-table-data -->
<!-- #| output: false -->

<!-- tabdata2 <- tabdata |>  -->
<!--   filter(!str_detect(scenario, "rho")) |>  -->
<!--   select(-rnormal) |>  -->
<!--   rename(frmdn30=model, mean=mean_logreturn, sd=sd_logreturn) |>  -->
<!--   pivot_longer(cols=c(mean, sd, frmdn30), -->
<!--                names_to = "measure", -->
<!--                values_to = "variant") |>  -->
<!--   group_by(porttype, measure) |>  -->
<!--   mutate(baseline=variant[scenario=="baseline"]) |>  -->
<!--   ungroup() |>  -->
<!--   filter(scenario != "baseline") |>  -->
<!--   relocate(variant, .after = baseline) |>  -->
<!--   mutate(diff=variant - baseline) |>  -->
<!--   pivot_wider(names_from = measure, values_from = c(baseline, variant, diff)) |>  -->
<!--   select(-contains("variant")) |>  -->
<!--   left_join(scen_names, by = join_by(scenario)) |>  -->
<!--   relocate(scendesc) |>  -->
<!--   arrange(porttype, desc(diff_frmdn30)) -->

<!-- ``` -->


<!-- #### High-equity portfolio -->

<!-- ```{r} -->

<!-- tabdata2 |>  -->
<!--   filter(porttype=="highequity") |>  -->
<!--   select(-porttype) |>  -->
<!--   gt() |> -->
<!--   tab_header( -->
<!--     title = html("Median funded ratio at 30 years for different scenarios: High equity portfolio"), -->
<!--     subtitle = html("Comparison to baseline scenario") -->
<!--   ) |> -->
<!--   tab_spanner(columns = contains("baseline"), -->
<!--               label="Baseline results") |> -->
<!--   tab_spanner(columns = contains("diff"), -->
<!--               label="Alternative minus baseline") |> -->
<!--   cols_label(baseline_mean="mean return", -->
<!--              diff_mean="mean return", -->
<!--              baseline_sd="sd return", -->
<!--              diff_sd="sd return", -->
<!--              baseline_frmdn30=html("Funded ratio<br>year 30"), -->
<!--              diff_frmdn30=html("Funded ratio<br>year 30") -->
<!--              ) |> -->
<!--   fmt_percent(columns=-c(scendesc, scenario), -->
<!--              scale=1, -->
<!--              decimals=1) |> -->
<!--   opt_row_striping() -->

<!-- ``` -->


<!-- #### High-fixed portfolio -->

<!-- ```{r} -->

<!-- tabdata2 |>  -->
<!--   filter(porttype=="highfixed") |>  -->
<!--   select(-porttype) |>  -->
<!--   gt() |> -->
<!--   tab_header( -->
<!--     title = html("Median funded ratio at 30 years for different scenarios: High fixed income portfolio"), -->
<!--     subtitle = html("Comparison to baseline scenario") -->
<!--   ) |> -->
<!--   tab_spanner(columns = contains("baseline"), -->
<!--               label="Baseline results") |> -->
<!--   tab_spanner(columns = contains("diff"), -->
<!--               label="Alternative minus baseline") |> -->
<!--   cols_label(baseline_mean="mean return", -->
<!--              diff_mean="mean return", -->
<!--              baseline_sd="sd return", -->
<!--              diff_sd="sd return", -->
<!--              baseline_frmdn30=html("Funded ratio<br>year 30"), -->
<!--              diff_frmdn30=html("Funded ratio<br>year 30") -->
<!--              ) |> -->
<!--   fmt_percent(columns=-c(scendesc, scenario), -->
<!--              scale=1, -->
<!--              decimals=1) |> -->
<!--   opt_row_striping() -->

<!-- ``` -->



## Construct risk measures from pension model results


## OLD Calculate risk measures

```{r}
#| label: risk-measures-OLD
#| output: false

riskmeasures1 <- result |> 
  filter(!str_detect(scenario, "rho")) |> 
  select(-c(lrmat, mean, sd)) |> 
  unnest(col=penmod) |> 
  summarise(mean=first(mean_model),
            sd=first(sd_model),
            vloss_a95t10 = VaR_loss(alpha=0.95, t=10, res=pick(everything())),
            verc_a95t10 = VaR_erc(alpha=0.95, t=10, res=pick(everything())),
            vuaal_a95t10 = VaR_uaal(alpha=0.95, t=10, res=pick(everything())),
            probfr_fr70t10 = prob_fr(fr_threshold=0.7, t=10, res=pick(everything())),
            proberc_erc20t10 = prob_erc(erc_threshold=0.20, t=10, res=pick(everything())),
            mdn_frt10=median(fr[year==10]),
            .by=c(scenario, porttype, modtype))

riskmeasures <- riskmeasures1 |> 
  pivot_longer(-c(scenario, porttype, modtype, mean, sd),
               names_to = "measure") |> 
  pivot_wider(names_from = modtype) |> 
  relocate(acli, .after = rnormal) |> 
  relocate(measure) |> 
  mutate(diff=acli - rnormal) |> 
  left_join(scen_names |> 
              select(scenario, scendesc), by = join_by(scenario)) |> 
  relocate(scendesc) |> 
  arrange(measure, scenario, porttype)

riskmeasures

riskmeasures |> 
  arrange(porttype, measure, scenario)

riskmeasures |> 
  filter(scenario=="baseline", porttype=="highequity")

riskmeasures |> 
  filter(scenario=="baseline", porttype=="highfixed")

```

## Model structure risk

To what extent does the choice of models (baseline vs random log model vs ACLI-modeled) change the model output?

NOTE: maybe add pure asset measure w/o contribs or payouts

### Gang Table 1

```{r}
#| label: gang-table-1

mod_order <- c("constant", "rnormal", "acli")
# meas_order <- c("vloss_a95t10", "verc_a95t10", "probfr_fr70t10")
meas_order <- c("vloss_a95t10", "verc_a95t10", "mdn_frt10")

base_flipped <- riskmeasures |> 
  filter(scenario=="baseline", measure %in% meas_order) |> 
  select(porttype, measure, constant, rnormal, acli) |> 
  mutate(measure=factor(measure, levels=meas_order)) |> # to put columns in right order when flipped
  pivot_longer(c(constant, rnormal, acli), names_to = "type") |> 
  arrange(measure) |>
  pivot_wider(names_from = measure) |> 
  mutate(type=factor(type, levels=mod_order)) |> 
  arrange(porttype, type)
  
base_flipped |> 
  # select(porttype, type, vloss_a95t10, verc_a95t10, probfr_fr70t10) |> 
  arrange(porttype, type) |> 
  gt() |> 
  tab_header(
    title = html("Selected Risk Measures for Baseline Runs of ESG Model"),
    subtitle = html("Normal returns have same mean and SD as ESG model")
  ) |>
  cols_label(porttype="Portfolio type",
             type = html("Random normal<br>or<br>modeled returns"),
             vloss_a95t10 = html("VaR asset loss in 10 years"),
             verc_a95t10 = html("VaR contribution increase in 10 years"),
             mdn_frt10 = html("Median funded ratio in 10 years")) |> 
             # probfr_fr70t10 = html("Probability of funded ratio below 70% in 10 years")) |>
  fmt_number(columns = c(vloss_a95t10, verc_a95t10),
             decimals = 3) |> 
  fmt_percent(columns = mdn_frt10,
              decimals = 1)

```


## Model parameterization risk

To what extent do changes in parameterization change model outputs?

Same portfolio, Same ACLI model, Same mean, Same SD
5-yr VaR loss 5-fr VaR erc 10-yr FR




```{r}
#| label: model-parameterization-risk
#| output: false

scen_names

scen_order <- scen_names |> 
  arrange(parm, bound)

# meas_order <- c("vloss_a95t10", "verc_a95t10", "probfr_fr70t10")
meas_order <- c("vloss_a95t10", "verc_a95t10", "mdn_frt10")


flipped <- riskmeasures |> 
  filter(measure %in% meas_order) |> 
  select(porttype, scenario, measure, acli) |> 
  mutate(measure=factor(measure, levels=meas_order)) |> # to put columns in right order
  arrange(measure) |>
  pivot_wider(names_from = measure, values_from = acli) |> 
  mutate(scenario=factor(scenario, levels=scen_order$scenario)) |> 
  arrange(porttype, scenario) |> 
  left_join(scen_order |> select(scenario, scendesc),
            by = join_by(scenario)) |> 
  relocate(scendesc, .after=scenario)

flipped  

```


```{r}
#| label: show-parameter-risk

flipped |> 
  # select(porttype, type, vloss_a95t10, verc_a95t10, probfr_fr70t10) |> 
  arrange(porttype, scenario) |> 
  gt() |> 
  cols_hide(column=porttype) |> 
  tab_header(
    title = html("Selected Risk Measures for Alternative Parameterizations of an ESG Model"),
    subtitle = html("High equity and high bonds portfolios")
  ) |>
  cols_label(porttype="Portfolio type",
             scenario="Parameterization",
             scendesc="Description",
             # type = html("Random normal<br>or<br>modeled returns"),
             vloss_a95t10 = html("VaR asset loss in 10 years"),
             verc_a95t10 = html("VaR contribution increase in 10 years"),
             mdn_frt10 = html("Median funded ratio in 10 years")) |> 
             # probfr_fr70t10 = html("Probability of funded ratio below 70% in 10 years")) |>
  tab_row_group(
    label = "High equity portfolio",
    rows = porttype == "highequity"
  ) |> 
  tab_row_group(
    label = "High bonds portfolio",
    rows = porttype == "highfixed"
  ) |> 
  fmt_number(columns = c(vloss_a95t10, verc_a95t10),
             decimals = 3) |> 
  fmt_percent(columns = mdn_frt10,
              decimals = 1)
```


## SLV analysis

```{r}

slvresult <- readRDS(here::here("data", "slv_and_comparison_penmod.rds"))

tabdata <- slvresult |> 
  filter(porttype=="highequity") |> 
  select(scenario, porttype, modtype, nsims, nyears, mean_model, sd_model, penmod) |> 
  unnest(col=penmod) |> 
  filter(year==30) |> 
  summarise(
    mean_model=first(mean_model),
    sd_model=first(sd_model),
    frmdn=median(fr), .by=c(scenario, porttype, modtype)) |> 
  group_by(porttype) |> 
  mutate(frbaseline=frmdn[scenario=="gaussmod" & modtype=="rnormal"],
         frdiff=frmdn - frbaseline) |> 
  relocate(frbaseline, .after=sd_model) |> 
  ungroup() |> 
  # filter(scenario != "baseline") |> 
  arrange(porttype, desc(frdiff))

tabdata |> 
  kable(digits=3)
  

```


### SLV Gang Table 1

```{r}


slvriskmeasures1 <- slvresult |> 
  # filter(porttype=="highequity") |> 
  select(-c(lrmat, mean, sd)) |> 
  unnest(col=penmod) |> 
  summarise(mean=first(mean_model),
            sd=first(sd_model),
            vloss_a95t10 = VaR_loss(alpha=0.95, t=10, res=pick(everything())),
            verc_a95t10 = VaR_erc(alpha=0.95, t=10, res=pick(everything())),
            vuaal_a95t10 = VaR_uaal(alpha=0.95, t=10, res=pick(everything())),
            probfr_fr70t10 = prob_fr(fr_threshold=0.7, t=10, res=pick(everything())),
            proberc_erc20t10 = prob_erc(erc_threshold=0.20, t=10, res=pick(everything())),
            mdn_frt10=median(fr[year==10]),
            .by=c(scenario, porttype, modtype))

slvriskmeasures <- slvriskmeasures1 |> 
  pivot_longer(-c(scenario, porttype, modtype, mean, sd),
               names_to = "measure") |> 
  pivot_wider(names_from = modtype) |> 
  relocate(measure) |> 
  mutate(diff=slv - rnormal) |> 
  arrange(measure, scenario, porttype)

slvriskmeasures

slvriskmeasures |> 
  arrange(porttype, measure, scenario)

slvriskmeasures |> 
  filter(porttype=="highequity") |> 
  arrange(porttype, measure, scenario)

```


```{r}
#| label: slv-gang-table-1
#| eval: false
#| output: false

mod_order <- c("constant", "rnormal", "acli")
# meas_order <- c("vloss_a95t10", "verc_a95t10", "probfr_fr70t10")
meas_order <- c("vloss_a95t10", "verc_a95t10", "mdn_frt10")

base_flipped <- slvriskmeasures |> 
  filter(scenario=="baseline", measure %in% meas_order) |> 
  select(porttype, measure, constant, rnormal, acli) |> 
  mutate(measure=factor(measure, levels=meas_order)) |> # to put columns in right order when flipped
  pivot_longer(c(constant, rnormal, acli), names_to = "type") |> 
  arrange(measure) |>
  pivot_wider(names_from = measure) |> 
  mutate(type=factor(type, levels=mod_order)) |> 
  arrange(porttype, type)
  
base_flipped |> 
  # select(porttype, type, vloss_a95t10, verc_a95t10, probfr_fr70t10) |> 
  arrange(porttype, type) |> 
  gt() |> 
  tab_header(
    title = html("Selected Risk Measures for Baseline Runs of ESG Model"),
    subtitle = html("Normal returns have same mean and SD as ESG model")
  ) |>
  cols_label(porttype="Portfolio type",
             type = html("Random normal<br>or<br>modeled returns"),
             vloss_a95t10 = html("VaR asset loss in 10 years"),
             verc_a95t10 = html("VaR contribution increase in 10 years"),
             mdn_frt10 = html("Median funded ratio in 10 years")) |> 
             # probfr_fr70t10 = html("Probability of funded ratio below 70% in 10 years")) |>
  fmt_number(columns = c(vloss_a95t10, verc_a95t10),
             decimals = 3) |> 
  fmt_percent(columns = mdn_frt10,
              decimals = 1)

```