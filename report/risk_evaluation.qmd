---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Risk evaluation

Analyze the pension model results previously created.

Summarize the results for each scenario (each row of the result tibble) by unnesting it to allow access to all of the sims and all of the years, calculating summary statistics such as percentiles of the funded ratio or more-sophisticated measures of risk (to come, after Gang's analysis).


## Setup

```{r}
#| label: setup
#| output: false

source(here::here("report", "_common.R"))

slv_scen_names <- read_csv(
"scenario,parm,parmdesc,scendesc
gaussmod, none, none, slv model with gaussian errors
tmod, df, degrees of freedom, slv model with heavy tails
skewmod, alpha, skewness parameter, slv model with skewed returns
levmod, rho, correlation parameter, slv model with volatility correlated with returns") |> 
  mutate(framework="slv")
slv_scen_names

acli_scen_names <- readRDS(here::here("data", "acli_scenario_names.rds"))

scen_names <- bind_rows(
  slv_scen_names,
  acli_scen_names) |> 
  relocate(framework)

## prepare raw excel tables ----
# library(openxlsx)
library(writexl)

tabdir <- here::here("report", "results") # where we want to write tables

# use this function to write tables
write_tab <- function(tabname, tab=NULL, tabdir=NULL) {
  # create a small excel file from a table - regardless of whether it is a tibble or a gt table
  # assumes tab and tabdir exist in the environment, by those names - but can be passed
  
  if (is.null(tab)) tab <- get("tab", envir = parent.frame())
  if (is.null(tabdir)) tabdir <- get("tabdir", envir = parent.frame())
  tpath <- fs::path(tabdir, paste0(tabname, ".xlsx"))
  
  if (inherits(tab, "gt_tbl")) {
    data <- tab$`_data`
  } else if (tibble::is_tibble(tab)) {
    data <- tab
  } else {
    return("ERROR: tab is neither gt table nor tibble!")
  }
  write_xlsx(data, tpath)
  
  # example:
  # write_tab("risk_equity")
}


```


## Functions to implement Gang's risk measures

Put the functions here for now. Later put them in a separate file.

-   **VaR_loss**: Worst (alpha percentile) asset loss at the end of year t (e.g., 5)


```{r}
#| label: risk-functions
#| output: false

# https://github.com/gchen3/pensionALM/blob/main/alm.R

# Using simulation method to calculate VaR_loss, VaR_erc, VaR_uaal at 95% and 99% over t time period
# Note: Monte Carlo simulation method for VaR: Under the Monte Carlo method, Value at Risk is calculated by randomly 
# creating a number of scenarios for future rates to estimate the change in value for each scenario, 
# and then calculating the VaR according to the worst losses.

VaR_loss <- function(alpha, t, res) {
  # Worst (alpha percentile) asset loss at the end of year t
  res_cut <- res |> filter(year==t)
  assets_tail <- quantile(res_cut$assets, (1-alpha)) # assets at the tail
  assets_initial <- res$assets[1] # first simulation in first year
  
  VaR_loss <-assets_tail - assets_initial
  VaR_loss_per <- VaR_loss / assets_initial # asset % reduction in year t at 1-alpha percentile
  
  return(VaR_loss_per)
  # VaR_loss(alpha=0.95, t=2, res=test)
  }


VaR_erc <- function(alpha, t, res) {
  # ERC amount at year t, alpha percentile
  res_cut <- res |> filter(year==t) # data in year t
  erc_tail <- quantile(res_cut$contrib, alpha) # contribution at alpha percentile
  erc_initial <- res$contrib[1] # initial contribution
  
  VaR_erc_jump <- erc_tail - erc_initial
  VaR_erc_jump_per <-  VaR_erc_jump / erc_initial # percentage jump in erc at alpha percentile in year t

  # revisit whether to return all these values  
  # output <- list(erc_tail=erc_tail, 
  #                VaR_erc_jump=VaR_erc_jump, 
  #                VaR_erc_jump_per=VaR_erc_jump_per)
  
  output <- VaR_erc_jump_per # for now, return a scalar
  
  return(output)
  # VaR_erc(alpha=0.95, t=10, res=test)
}


VaR_uaal <- function(alpha, t, res) {
  # fr in year t, at 1 - alpha percentile 
  res_cut <- res |> filter(year==t)
  VaR_fr <- quantile(res_cut$fr, (1-alpha)) # fr at the 1-alpha percentile
  # just return the VaR_fr since VaR_uaal is easily computable if desired
  return(VaR_fr)
  # VaR_uaal(alpha=0.95, t=10, res=test)
}


prob_fr <- function(fr_threshold, t, res) {
  # Probability of funded ratio falling below x% at the end of t years
  
  res_cut <- res |> filter(year==t)
  n_below <- sum(res_cut$fr < fr_threshold)
  n_percent = n_below / nrow(res_cut)
  return(n_percent)
  # prob_fr(fr_threshold=0.8, t=5, res=test)
 }


prob_erc <- function(erc_threshold, t, res) {
  # Probability of contribution rate higher than x% of payroll at the end of t years
  # See CalPERS "Probability of Employer Contribution Rates Exceeding Given Level (at any point in next 30 years)"
  
  res_cut <- res |> 
    filter(year==t) |> 
    mutate(erc_rate= contrib / payroll)
  
  n_above <- sum(res_cut$erc_rate > erc_threshold)
  n_percent <- n_above / nrow(res_cut)
  return(n_percent)
  # prob_erc(erc_threshold=0.30, t=4, res=test)
}


```


## Get saved pension model results

Get data, show the nested data, and show the head and tail of one scenario unnested.

```{r}
#| label: get-penmod-results
#| output: false

result <- readRDS(here::here("data", "allscen_and_comparison_penmod.rds"))

result

result |> 
  slice_head(n=2) |> 
  select(-lrmat) |> 
  unnest(penmod) |> 
  ht()

result |> 
  select(-lrmat) |> 
  filter(scenario=="baseline") |> 
  unnest(col=penmod) |> 
  ht()

```


## Construct risk measures from pension model results


```{r}
#| label: risk-measures
#| output: false

riskmeasures1 <- result |> 
  # weed out bad results
  filter(!(framework=="acli" & str_detect(scenario, "rho"))) |> # rho doesn't affect ACLI results
  filter(!(framework=="slv" & scenario=="tmod")) |>  # t models did not work well for slv models
  # NOTE: leaves us with about 60 framework-scenario-portfolio-modtype combinations
  select(-c(lrmat, mean, sd)) |> # we don't need these
  unnest(col=penmod) |> # 6.66 million observations
  summarise(mean=first(mean_model),
            sd=first(sd_model),
            vloss_a95t10 = VaR_loss(alpha=0.95, t=10, res=pick(everything())), # asset loss at alpha percentile, year t
            verc_a95t10 = VaR_erc(alpha=0.95, t=10, res=pick(everything())), # ERC amount at year t, alpha percentile
            vuaal_a95t10 = VaR_uaal(alpha=0.95, t=10, res=pick(everything())), # fr in year t, (1 - alpha) percentile 
            probfr_fr70t10 = prob_fr(fr_threshold=0.7, t=10, res=pick(everything())), # prob FR below x% at end year t
            proberc_erc20t10 = prob_erc(erc_threshold=0.20, t=10, res=pick(everything())), # prob ERC above x% payroll at end year t
            mdn_frt10=median(fr[year==10]), # median FR at end year t
            .by=c(framework, scenario, porttype, modtype)) # 60 combos

riskmeasures <- riskmeasures1 |> 
  pivot_longer(-c(framework, scenario, porttype, modtype, mean, sd),
               names_to = "measure") |> # 6 measures for each combo=360 recs
  pivot_wider(names_from = modtype) |> # 3 modtypes means 120 recs
  relocate(measure) |> 
  relocate(model, .after = rnormal) |> 
  mutate(diff=model - rnormal) |> 
  left_join(scen_names |> 
              select(framework, scenario, scendesc), 
            by = join_by(framework, scenario)) |> 
  relocate(scendesc) |> 
  arrange(measure, framework, scenario, porttype)

riskmeasures

riskmeasures |> 
  arrange(porttype, measure, scenario)

riskmeasures |> 
  filter(framework=="acli", scenario=="baseline", porttype=="highequity")

riskmeasures |> 
  filter(scenario=="baseline", porttype=="highfixed")

```


## Model structure risk

To what extent does the choice of models change the model output?

NOTE: maybe add pure asset measure w/o contribs or payouts


```{r}
#| label: create-flipped
#| output: false

mod_order <- c("constant", "rnormal", "gaussmod", "skewmod", "levmod", "acli")
mod_labs <- c("Deterministic", "Random\nnormal", "Gaussian SV", "Skewed SV", "Leverage SV", "Complex ESG")

meas_order <- c("vloss_a95t10", "verc_a95t10", "mdn_frt10")

base_flipped <- riskmeasures |> 
  filter(framework=="slv" | (framework=="acli" & scenario=="baseline")) |> 
  filter(measure %in% meas_order) |> 
  select(framework, scenario, porttype, measure, mean, sd, constant, rnormal, model) |> 
  mutate(measure=factor(measure, levels=meas_order)) |> # to put columns in right order when flipped
  pivot_longer(c(constant, rnormal, model), names_to = "type") |> 
  filter(!(type %in% c("constant", "rnormal") & scenario != "gaussmod")) |> 
  mutate(type=case_when(
    type %in% c("constant", "rnormal") ~ type,
    framework == "acli" & scenario=="baseline" ~ "acli",
    .default = scenario)) |> 
  mutate(type=factor(type, levels=mod_order), # for proper ordering
         typef=factor(type, levels=mod_order, labels=mod_labs)) |> # nice labels
  relocate(type, typef) |> 
  select(-scenario, -framework) |> 
  arrange(measure) |>
  pivot_wider(names_from = measure) |> 
  mutate(sd=ifelse(type=="constant", 0, sd)) |> 
  arrange(type)

```


### High-equity portfolio

Baseline (Gaussian) SV model vs. constant returns and model-equivalent random normal returns

Takeaways:

-   Asset risk, contribution risk, and funded ratio all are worse once we introduce volatility, compared to a constant-returns scenario
-   (Note that when assets fall, contributions may rise, keeping funded ratio relatively stable and also potentially stabilizing assets)
-   Risk measures are slightly worse for the Gaussian modeled returns than for random normal returns, but the difference is small compared to the difference between random normal and constant.
-   Risk measures are slightly worse for the skewed and leverage models than for the Gaussian model, but again not by a lot compared with the difference between random normal and constant returns
-   The leverage model appears to have the highest risk of the three models shown. It also fit the data best (as measured by AIC).

```{r}
#| label: table1-all-highequity
#| eval: true
#| output: true

tab <- base_flipped |> 
  filter(porttype=="highequity") |> 
  select(-porttype) |> 
  gt() |> 
  cols_hide(c(type)) |> 
  tab_header(
    title = html("Selected Risk Measures for Alternative Stochastic Volatility Models, High Equity Portfolio"),
    subtitle = html("Normal returns calibrated to have same mean and SD as Gaussian SV model")
  ) |>
  cols_label(typef = html("Deterministic,<br>Random normal, or<br>modeled returns"),
             mean = html("Mean annual<br>log return"),
             sd = html("Standard deviation"),
             vloss_a95t10 = html("VaR % asset loss<br>Year 10 vs. Year 1<br>(5th percentile)"),
             verc_a95t10 = html("VaR % contribution increase<br>Year 10 vs. Year 1<br>(95th percentile)"),
             mdn_frt10 = html("Median funded ratio<br>Year 10")) |> 
  fmt_percent(columns = c(vloss_a95t10, verc_a95t10),
             decimals = 1) |> 
  fmt_percent(columns = c(mdn_frt10),
              decimals = 1) |>
  fmt_percent(columns = c(mean, sd),
              decimals = 1) |> 
  tab_footnote(
    footnote = "Complex model differs from other models in multiple ways",
    locations = cells_body(
      columns = c(typef),
      rows = type == "acli"))
tab

write_tab("risk_measures_highequity")  

# tab_source_note(source_note = "Asset loss at 5th percentile")
#   tab_source_note(source_note = htmltools::HTML('<div style="text-align: left;">Note: This table shows sample data.</div>'))


```


```{r}
#| label: structure-equity-plot
#| eval: true
#| output: true

base_flipped |> 
  filter(porttype=="highequity") |> 
  filter(type != "constant") |> 
  ggplot(aes(vloss_a95t10, verc_a95t10)) +
  geom_point(colour="black") +
  geom_text_repel(aes(label=typef), colour="blue") +
  scale_x_continuous(name="Asset % change year 10 vs. year 1, 5th percentile",
                     breaks=seq(-1, 1, by=.01),
                     labels = scales::percent_format(accuracy=1)) +
  scale_y_continuous(name="Contribution % change year 10 vs. year 1, 95th percentile",
                     breaks=seq(-1, 2, by=.01),
                     labels = scales::percent_format(accuracy=1)) +  
  ggtitle("Impact of model structure on risk of extreme asset loss and extreme contribution increase",
          subtitle="High-equity portfolios") +
  labs(caption="All portfolios have mean log return of ~6.25%") +
  theme_bw() +
  theme(plot.title = element_text(size = 11),
        plot.subtitle = element_text(size = 8)) +
  caption_left
  

```


### High fixed portfolio

Takeaways:

-   Asset risk, contribution risk, and funded ratio all are worse once we introduce volatility, compared to a constant-returns scenario
-   (Note that when assets fall, contributions may rise, keeping funded ratio relatively stable and also potentially stabilizing assets)
-   Risk measures are slightly worse for the Gaussian modeled returns than for random normal returns, but the difference is small compared to the difference between random normal and constant.
-   Risk measures for the skewed model are slightly better than for the Gaussian model, but again not by a lot compared with the difference between random normal and constant returns
-   Risk measures for the leverage model are moderately worse for the leverage model than for the Gaussian model.
-   As with the high-equity portfolio, the leverage model appears to have the highest risk of the three models shown. It also fit the data best (as measured by AIC).

```{r}
#| label: table1-all-highfixed
#| eval: true
#| output: true

tab <- base_flipped |> 
  filter(porttype=="highfixed") |> 
  select(-porttype) |> 
  gt() |> 
  cols_hide(c(type)) |> 
  tab_header(
    title = html("Selected Risk Measures for Alternative Stochastic Volatility Models, High Fixed-Income Portfolio"),
    subtitle = html("Normal returns calibrated to have same mean and SD as Gaussian SV model")
  ) |>
  cols_label(typef = html("Deterministic,<br>Random normal, or<br>modeled returns"),
             mean = html("Mean annual<br>log return"),
             sd = html("Standard deviation"),
             vloss_a95t10 = html("VaR % asset loss<br>Year 10 vs. Year 1<br>(5th percentile)"),
             verc_a95t10 = html("VaR % contribution increase<br>Year 10 vs. Year 1<br>(95th percentile)"),
             mdn_frt10 = html("Median funded ratio<br>Year 10")) |> 
  fmt_percent(columns = c(vloss_a95t10, verc_a95t10),
             decimals = 1) |> 
  fmt_percent(columns = c(mdn_frt10),
              decimals = 1) |>
  fmt_percent(columns = c(mean, sd),
              decimals = 1) |> 
  tab_footnote(
    footnote = "Complex model differs from other models in multiple ways",
    locations = cells_body(
      columns = c(typef),
      rows = type == "acli"))

tab

write_tab("risk_measures_highfixed")  

```


```{r}
#| label: structure-fixed-plot
#| eval: true
#| output: true

base_flipped |> 
  filter(porttype=="highfixed") |> 
  filter(type != "constant") |> 
  ggplot(aes(vloss_a95t10, verc_a95t10)) +
  geom_point(colour="black") +
  geom_text_repel(aes(label=typef), colour="blue") +
  scale_x_continuous(name="Asset % change year 10 vs. year 1, 5th percentile",
                     breaks=seq(-1, 1, by=.01),
                     labels = scales::percent_format(accuracy=1)) +
  scale_y_continuous(name="Contribution % change year 10 vs. year 1, 95th percentile",
                     breaks=seq(-1, 2, by=.01),
                     labels = scales::percent_format(accuracy=1)) +  
  ggtitle("Impact of model structure on risk of extreme asset loss and extreme contribution increase",
          subtitle="High fixed-income portfolios") +
  labs(caption="All portfolios have mean log return of ~5.00%") +
  theme_bw() +
  theme(plot.title = element_text(size = 11),
        plot.subtitle = element_text(size = 8)) +
  caption_left

 # theme(
 #    plot.title = element_text(size = 14, hjust = 0.5),  # Adjust the size and position of the title
 #    plot.margin = margin(t = 20, r = 20, b = 20, l = 20)  # Adjust the plot margins
 #  )

```

### Bar charts

```{r}
#| label: bar-charts-varloss
#| output: true

figure_Vloss_model <- base_flipped |>
  # filter(porttype=="highequity") |>
  mutate(porttype=factor(porttype,
                         levels=c("highequity", "highfixed"),
                         labels=c("High-Equity Portfolio", "High-Fixed Portfolio")),
         fill_color = ifelse(type == "constant", "grey85", "grey70"),
         line_type = ifelse(type == "constant", "solid", "dashed")) |>
  ggplot(aes(x = typef, y = vloss_a95t10)) +
  geom_bar(stat = "identity", aes(fill = fill_color, linetype = line_type),
           colour = "black", width = 0.5, show.legend = FALSE) +
  geom_text(aes(label = scales::percent(vloss_a95t10, accuracy = 1)),
            vjust = 1.5, size = 3) +
  scale_y_continuous(name="% Change",
                     breaks = seq(-0.4, 0.5, .1), limit = c(-0.4, 0.5), labels = label_percent(accuracy=1)) +
  labs(x=NULL) +
  theme_bw() +
  ggtitle("Asset % change year 10 vs. year 1, 5th percentile",
          subtitle = "Alternative models, mean log return ~6.25%") +
  facet_wrap(~porttype, ncol = 1, scales = "fixed") +
  scale_fill_identity() +
  scale_color_identity()
 
figure_Vloss_model
ggsave(filename=here::here("report", "results", "Figure_vloss_model.png"), plot=figure_Vloss_model, width=10, height=6)

```


```{r}
#| label: bar-charts-ercrise
#| output: true

figure_VERC_model <- base_flipped |>
  # filter(porttype=="highequity") |>
  mutate(porttype=factor(porttype,
                         levels=c("highequity", "highfixed"),
                         labels=c("High-Equity Portfolio", "High-Fixed Portfolio")),
         fill_color = ifelse(type == "constant", "grey85", "grey70"),
         line_type = ifelse(type == "constant", "solid", "dashed")) |>
  ggplot(aes(x = typef, y = verc_a95t10)) +
  geom_bar(stat = "identity", aes(fill = fill_color, linetype = line_type),
           colour = "black", width = 0.5, show.legend = FALSE) +
  geom_text(aes(label = scales::percent(verc_a95t10, accuracy = 1)),
            vjust = 1.5, size = 3) +
  scale_y_continuous(name="% Change",
                     breaks = seq(-1, 2, .2), labels = label_percent(accuracy=1)) +
  labs(x=NULL) +
  theme_bw() +
  ggtitle("Contribution % change year 10 vs. year 1, 95th percentile",
          subtitle = "Alternative models, mean log return ~6.25%") +
  facet_wrap(~porttype, ncol = 1, scales = "fixed") +
  scale_fill_identity() +
  scale_color_identity()
figure_VERC_model

ggsave(filename=here::here("report", "results", "Figure_VERC_model.png"), plot=figure_VERC_model, width=10, height=6)


```



## Model parameterization risk

To what extent do changes in parameterization change model outputs?

Same portfolio, Same ACLI model, Same mean, Same SD
5-yr VaR loss 5-fr VaR erc 10-yr FR


```{r}
#| label: model-parameterization-risk
#| output: false

scen_names

parm_order <- c("constant", "rnormal", "baseline", "phi", "rho", "sigma_v", "tau")
mod_order <- scen_names |> 
  filter(framework=="acli") |> 
  rename(type=scenario, typedesc=scendesc) |> 
  add_row(framework="acli", type="constant", parm="constant", typedesc="constant") |> 
  add_row(framework="acli", type="rnormal", parm="rnormal", typedesc="Random normal") |> 
  mutate(parm=factor(parm, levels=parm_order)) |> 
  arrange(parm, bound) |> 
  mutate(order=row_number())

meas_order <- c("vloss_a95t10", "verc_a95t10", "mdn_frt10")

flipped <- riskmeasures |> 
  filter(framework=="acli", measure %in% meas_order) |> 
  select(framework, porttype, scenario, measure, mean, sd, constant, rnormal, model) |> 
  mutate(measure=factor(measure, levels=meas_order)) |>  # to put columns in right order when flipped
  pivot_longer(c(constant, rnormal, model), names_to = "type") |> 
  filter(!(type %in% c("constant", "rnormal") & scenario != "baseline")) |> 
  mutate(type=case_when(
    type %in% c("constant", "rnormal") ~ type,
    .default = scenario)) |> 
  select(-scenario) |> 
  arrange(measure) |>
  pivot_wider(names_from = measure) |> 
  relocate(type) |> 
  left_join(mod_order, by = join_by(type, framework)) |> 
  mutate(sd=ifelse(type=="constant", 0, sd)) |> 
  arrange(porttype, order) |> 
  select(-c(parmdesc, bound))

flipped  

```


```{r}
#| label: equity-parameter-risk

tab <- flipped |> 
  filter(porttype=="highequity") |> 
  select(type, mean, sd, vloss_a95t10:mdn_frt10, typedesc ) |> 
  gt() |> 
  tab_header(
    title = html("Selected Risk Measures for Alternative Complex ESG Parameterizations, High Equity Portfolio"),
    subtitle = html("Normal returns have same mean and SD as ESG model")
  ) |>
  cols_label(type = html("Deterministic,<br>Random normal, or<br>modeled returns"),
             vloss_a95t10 = html("VaR % asset loss<br>Year 10 vs. Year 1<br>(5th percentile)"),
             verc_a95t10 = html("VaR % contribution increase<br>Year 10 vs. Year 1<br>(95th percentile)"),
             mdn_frt10 = html("Median funded ratio<br>Year 10")) |> 
  fmt_percent(columns = c(vloss_a95t10, verc_a95t10),
             decimals = 1) |> 
  fmt_percent(columns = c(mdn_frt10),
              decimals = 1) |> 
  fmt_percent(columns = c(mean, sd),
              decimals = 2)  

tab

write_tab("parameter_risk_highequity")

```


```{r}
#| label: fixed-parameter-risk

tab <- flipped |> 
  filter(porttype=="highfixed") |> 
  select(type, mean, sd, vloss_a95t10:mdn_frt10, typedesc ) |> 
  gt() |> 
  tab_header(
    title = html("Selected Risk Measures for Alternative Complex ESG Parameterizations, High Fixed-Income Portfolio"),
    subtitle = html("Normal returns have same mean and SD as ESG model")
  ) |>
  cols_label(type = html("Constant,<br>Random normal, or<br>modeled returns"),
             vloss_a95t10 = html("VaR % asset loss<br>Year 10 vs. Year 1<br>(5th percentile)"),
             verc_a95t10 = html("VaR % contribution increase<br>Year 10 vs. Year 1<br>(95th percentile)"),
             mdn_frt10 = html("Median funded ratio<br>Year 10")) |> 
  fmt_percent(columns = c(vloss_a95t10, verc_a95t10),
             decimals = 1) |> 
  fmt_percent(columns = c(mdn_frt10),
              decimals = 1) |> 
  fmt_percent(columns = c(mean, sd),
              decimals = 2)  
tab

write_tab("parameter_risk_highfixed")

```


### High-equity parameterization risk in complex ESG

NOTE: all scenarios come from a complex ESG.

```{r}
#| label: parameters-equity-plot
#| eval: true
#| output: true

flipped |>
  filter(porttype=="highequity", type != "constant") |> 
  select(type, vloss_a95t10, verc_a95t10) |> 
  mutate(rnorm=type=="rnormal") |> 
  mutate(group=case_when(type=="rnormal" ~ 1,
                         type=="baseline" ~ 2,
                         .default=3),
         group=factor(group)) |> 
  ggplot(aes(vloss_a95t10, verc_a95t10)) +
  geom_point(colour="black") +
  geom_text_repel(aes(label=type, colour=group)) +
  scale_colour_manual(values=c("red", "darkgreen", "blue")) +
  scale_x_continuous(name="Asset % change year 10 vs. year 1, 5th percentile",
                     breaks=seq(-1, 1, by=.02),
                     labels = scales::percent_format(accuracy=1)) +
  scale_y_continuous(name="Contribution % change year 10 vs. year 1, 95th percentile",
                     breaks=seq(-1, 2, by=.02),
                     labels = scales::percent_format(accuracy=1)) +  
  ggtitle("Impact of model parameterization on risk of extreme asset loss and extreme contribution increase",
          subtitle="Complex ESG, High-equity portfolios") +
  theme_bw() +
  theme(plot.title = element_text(size = 11),
        plot.subtitle = element_text(size = 8)) +
  legend_none

```


### High fixed-income parameterization risk in complex ESG


```{r}
#| label: parameters-fixed-plot
#| eval: true
#| output: true

flipped |>
  filter(porttype=="highfixed", type != "constant") |> 
  select(type, vloss_a95t10, verc_a95t10) |> 
  mutate(rnorm=type=="rnormal") |> 
  mutate(group=case_when(type=="rnormal" ~ 1,
                         type=="baseline" ~ 2,
                         .default=3),
         group=factor(group)) |> 
  ggplot(aes(vloss_a95t10, verc_a95t10)) +
  geom_point(colour="black") +
  geom_text_repel(aes(label=type, colour=group)) +
  scale_colour_manual(values=c("red", "darkgreen", "blue")) +
  scale_x_continuous(name="Asset % change year 10 vs. year 1, 5th percentile",
                     breaks=seq(-1, 1, by=.02),
                     labels = scales::percent_format(accuracy=1)) +
  scale_y_continuous(name="Contribution % change year 10 vs. year 1, 95th percentile",
                     breaks=seq(-1, 2, by=.02),
                     labels = scales::percent_format(accuracy=1)) +  
  ggtitle("Impact of model parameterization on risk of extreme asset loss and extreme contribution increase",
          subtitle="Complex ESG, High fixed-income portfolios") +
  theme_bw() +
  theme(plot.title = element_text(size = 11),
        plot.subtitle = element_text(size = 8))+
  legend_none

```


### Range plots

```{r}
#| label: range-plots
#| eval: true
#| output: true

# ns(riskmeasures)
# ns(riskmeasures1)

range_data <- riskmeasures |> 
  filter(framework=="acli", measure %in% c("vloss_a95t10", "verc_a95t10")) |> 
  select(scenario, measure, porttype, rnormal, model) |> 
  mutate(scenario=str_replace(scenario, "sigma_v", "sigmaV")) |> 
  separate_wider_delim(cols=scenario, names=c("parameter", "bound"), delim="_", too_few = "align_start") |>
  mutate(bound=ifelse(is.na(bound), "point", bound),
         measure=factor(measure,
                        levels=c("vloss_a95t10", "verc_a95t10"),
                        labels=c("VaR_loss", "VaR_ERC")),
         porttype=factor(porttype,
                         levels=c("highequity", "highfixed"),
                         labels=c("High-Equity Portfolio", "High-Fixed Portfolio"))) |> 
  pivot_longer(cols = c(rnormal, model)) |> 
  filter((parameter=="baseline") | name=="model") |>  
  pivot_wider(names_from = bound) |> 
  mutate(lowloss=pmin(lbound, ubound),
         highloss=pmax(lbound, ubound))

stats <- range_data |> 
  filter(parameter=="baseline") |> 
  select(measure, porttype, name, point)

p <- range_data |>
  filter(parameter!="baseline") |> 
  filter(measure == "VaR_loss") |>
  # filter(porttype=="High-Equity") |> 
  ggplot(aes(y = parameter)) +
  geom_linerange(aes(xmin = lowloss, xmax = highloss), linewidth=10, color = "gray70") + # size = 10, 
  geom_text(aes(lowloss, label=percent(lowloss, accuracy=.1)), hjust=1, size = 3.5, nudge_x=-0.0015) +
  geom_text(aes(highloss, label=percent(highloss, accuracy=.1)), hjust=0, size = 3.5, nudge_x=0.0015) +
  # geom_vline(aes(xintercept = point), colour="blue", data=stats |> filter(name=="model", measure == "VaR_loss")) +
  # geom_vline(aes(xintercept = point), colour="red", data=stats |> filter(name=="rnormal", measure == "VaR_loss")) +
  scale_x_continuous(labels = scales::label_percent(accuracy=1), breaks = seq(-1, 1, .05)) +
  xlab("Range of VaR Asset Loss (5th percentile) at 10th Year") +
  ylab(NULL) +
  theme_bw() +
  facet_wrap(~ porttype, scales = "fixed",  ncol = 1) +
  ggtitle("VaR of Asset Loss Under Alternative ESG Model Parameterizations",
          subtitle = "Based on upper-bound and lower-bound values of important model parameters")
p
ggsave(filename=here::here("report", "results", "FigureVaRLoss.png"), plot=p, width=10, height=6, scale=1.5)



p <- range_data |>
  filter(parameter!="baseline") |> 
  filter(measure == "VaR_ERC") |>
  # filter(porttype=="High-Equity") |> 
  ggplot(aes(y = parameter)) +
  geom_linerange(aes(xmin = lowloss, xmax = highloss), linewidth = 10, color = "gray70") +
  geom_text(aes(lowloss, label=percent(lowloss, accuracy=.1)), hjust=1, size = 3.5, nudge_x=-0.0015) +
  geom_text(aes(highloss, label=percent(highloss, accuracy=.1)), hjust=0, size = 3.5, nudge_x=0.0015) +
  # geom_vline(aes(xintercept = point), colour="blue", data=stats |> filter(name=="model", measure == "VaR_loss")) +
  # geom_vline(aes(xintercept = point), colour="red", data=stats |> filter(name=="rnormal", measure == "VaR_loss")) +
  scale_x_continuous(labels = scales::label_percent(accuracy=1), breaks = seq(0, 2, .05)) +
  xlab("Range of Employer Contribution Increase (Worst 95th percentile) at 10th Year") +
  ylab(NULL) +
  theme_bw() +
  facet_wrap(~ porttype, scales = "fixed",  ncol = 1) +
  ggtitle("VaR of Employer Contribution Increase Under Alternative ESG Model Parameterizations",
          subtitle = "Based on upper-bound and lower-bound values of important model parameters")
p
ggsave(filename=here::here("report", "results", "FigureVaRERC.png"), plot=p, width=10, height=6, scale=1.5)

```


```{r}
#| label: how-to-write-xl-workbook
#| eval: false
#| output: false

# Not using this, but saving it so that the technique is available if wanted

library(openxlsx)

tabdir <- here::here("report", "results") # where we want to write tables
wbpath <- fs::path(tabdir, "wb.xlsx")
saveWorkbook(wb, wbpath, overwrite = TRUE)


addxl <- function(tabname, tab = NULL, wbpath = NULL) {
  # add worksheet to a saved workbook
  if (is.null(tab)) tab <- get("tab", envir = parent.frame())
  if (is.null(wbpath)) wbpath <- get("wbpath", envir = parent.frame())

  wb <- loadWorkbook(wbpath)
  addWorksheet(wb, tabname)
  writeData(wb, tabname, tab)
  # note that overwrite is FALSE so we don't lose worksheets already added!
  saveWorkbook(wb, wbpath, overwrite = TRUE)
  # example: addxl("risk_equity")  # if we have a new table named tab and want to call it risk_equity in the xlsx file
}

addxl("risk_equity")

```

