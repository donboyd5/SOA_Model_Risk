---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Risk evaluation

Analyze the pension model results previously created.

Summarize the results for each scenario (each row of the result tibble) by unnesting it to allow access to all of the sims and all of the years, calculating summary statistics such as percentiles of the funded ratio or more-sophisticated measures of risk (to come, after Gang's analysis).


## Setup

```{r}
#| label: setup
#| output: false

source(here::here("report", "_common.R"))

scen_names <- readRDS(here::here("data", "acli_scenario_names.rds"))

```


## Get saved pension model results

Get data, show the nested data, and show the head and tail of one scenario unnested.

```{r}
#| label: get-penmod-results
#| output: false

# result <- readRDS(here::here("data", "penmod_results.rds"))
result <- readRDS(here::here("data", "acli_normal_penmod.rds"))

result

result |> 
  select(-irmat) |> 
  unnest(penmod)

result |> 
  select(-irmat) |> 
  filter(scenario=="phi_m.05") |> 
  unnest(col=penmod) |> 
  ht()

```

## Exploratory analysis

Take a look at a couple of simple results before running Gang's risk measures. Here we look at the median funded ratio at 30 years.

### Comparison of modeled investment returns to random normal returns


```{r}
#| label: explore-data

tabdata <- result |> 
  select(-c(irmat, mean_rnorm, sd_rnorm)) |> 
  # filter(scenario %in% c("baseline", "phi_m.05")) |> 
  unnest(col=penmod) |> 
  filter(year==30) |> 
  summarise(
    mean_logreturn=first(mean_logreturn),
    sd_logreturn=first(sd_logreturn),
    frmdn=median(fr), .by=c(scenario, porttype, version)) |> 
  pivot_wider(names_from = version, values_from = frmdn)

```


This table compares, for each scenario, the median funded ratio at 30 years using ACLI-modeled investment return to the funded ratio using a random normal distribution with the same mean and standard deviatio. It is sorted by the largest difference in median funded ratio between modeled and random normal returns.

Observations:

-   In general, the differences from random normal at 30 years hardly look large - the most is 2 percentage points after 30 years. We can easily see swings of 2 percent or more in a single year.

-   Partly, this is because of automatic adjustments built into pension funding - if returns are low, contributions go up, helping to stabilize the funded ratio. That is why we need to look at contributions also. This suggests there's value in just looking at cumulative returns, without considering contributions, to help understand the pure effects of alternative returns. I probably should do that.

-   Modeled median funded ratio is always slightly higher than the random normal counterpart, even though mean log return and sd of log return is virtually identical for both.

-   The difference is much greater for the high fixed-income portfolio than for the high equity portfolio. In these portfolios, mean returns (and standard deviations) are lower than in the high equity portfolios and so median funded ratios are lower as well, but this doesn't explain why the difference from random normal would be large.

-   I am not sure why the differences from random normal are larger with the high fixed portfolios. If we had time it would make sense to try to figure out what the ACLI model is doing that has a bigger impact when fixed income plays a bigger role.



```{r}
#| label: explore-table
#| output: true

tabdata |> 
  relocate(rnormal, .before=model) |> 
  mutate(diff_vsrnorm=model - rnormal) |> 
  left_join(scen_names, by = join_by(scenario)) |> 
  relocate(scendesc) |> 
  arrange(desc(diff_vsrnorm)) |> 
  gt() |> 
  tab_header(
    title = html("Median funded ratio at 30 years for different scenarios and portfolio types"),
    subtitle = html("Modeled portfolio and random normal counter part (same mean, sd)")
  ) |>
  tab_spanner(columns = contains("_logreturn"),
              label="Portfolio log returns") |>
  tab_spanner(columns = c(rnormal, model, diff_vsrnorm),
              label="Median funded ratio at 30 years") |>
  cols_label(mean_logreturn="mean",
             sd_logreturn="sd",
             rnormal=html("Random<br>normal"),
             model = html("Model"),
             diff_vsrnorm = html("Model<br>minus<br>normal")) |>
  fmt_percent(columns=-c(scendesc, scenario, porttype),
             scale=1,
             decimals=1) |>
  opt_row_striping()

```


```{r}
#| label: explore-plot


tabdata |> 
  ggplot(aes(rnormal, model, colour=porttype, label=scenario)) +
  geom_point() +
  # geom_text_repel(vjust = -0.5, hjust = 0.5, max.overlaps = 15) +
  geom_text(vjust = -0.5, hjust = 0.5) +
  geom_abline(slope=1) +
  scale_color_manual(values=c("red", "blue")) +
  scale_x_continuous(name="Funded ratio with random normal returns corresponding to model (same mean, sd)", 
                     breaks = seq(0, 1, .05),
                     labels = scales::percent_format(accuracy = .1)) +
  scale_y_continuous(name="Funded ratio with ACLI-modeled returns", 
                     breaks = seq(0, 1, .05),
                     labels = scales::percent_format(accuracy = .1)) +
  ggtitle(label = "Median funded ratio at 30 years",
          subtitle = "ACLI scenarios and portfolios") +
  guides(col= guide_legend(title= "Portfolio\ntype")) +
  theme_bw()

```


### Comparison to baseline for the same portfolio type


```{r}
#| label: explore-baseline-table-data
#| output: false

tabdata2 <- tabdata |> 
  filter(!str_detect(scenario, "rho")) |> 
  select(-rnormal) |> 
  rename(frmdn30=model, mean=mean_logreturn, sd=sd_logreturn) |> 
  pivot_longer(cols=c(mean, sd, frmdn30),
               names_to = "measure",
               values_to = "variant") |> 
  group_by(porttype, measure) |> 
  mutate(baseline=variant[scenario=="baseline"]) |> 
  ungroup() |> 
  filter(scenario != "baseline") |> 
  relocate(variant, .after = baseline) |> 
  mutate(diff=variant - baseline) |> 
  pivot_wider(names_from = measure, values_from = c(baseline, variant, diff)) |> 
  select(-contains("variant")) |> 
  left_join(scen_names, by = join_by(scenario)) |> 
  relocate(scendesc) |> 
  arrange(porttype, desc(diff_frmdn30))

```


#### High-equity portfolio

```{r}

tabdata2 |> 
  filter(porttype=="highequity") |> 
  select(-porttype) |> 
  gt() |>
  tab_header(
    title = html("Median funded ratio at 30 years for different scenarios: High equity portfolio"),
    subtitle = html("Comparison to baseline scenario")
  ) |>
  tab_spanner(columns = contains("baseline"),
              label="Baseline results") |>
  tab_spanner(columns = contains("diff"),
              label="Alternative minus baseline") |>
  cols_label(baseline_mean="mean return",
             diff_mean="mean return",
             baseline_sd="sd return",
             diff_sd="sd return",
             baseline_frmdn30=html("Funded ratio<br>year 30"),
             diff_frmdn30=html("Funded ratio<br>year 30")
             ) |>
  fmt_percent(columns=-c(scendesc, scenario),
             scale=1,
             decimals=1) |>
  opt_row_striping()

```


#### High-fixed portfolio

```{r}

tabdata2 |> 
  filter(porttype=="highfixed") |> 
  select(-porttype) |> 
  gt() |>
  tab_header(
    title = html("Median funded ratio at 30 years for different scenarios: High fixed income portfolio"),
    subtitle = html("Comparison to baseline scenario")
  ) |>
  tab_spanner(columns = contains("baseline"),
              label="Baseline results") |>
  tab_spanner(columns = contains("diff"),
              label="Alternative minus baseline") |>
  cols_label(baseline_mean="mean return",
             diff_mean="mean return",
             baseline_sd="sd return",
             diff_sd="sd return",
             baseline_frmdn30=html("Funded ratio<br>year 30"),
             diff_frmdn30=html("Funded ratio<br>year 30")
             ) |>
  fmt_percent(columns=-c(scendesc, scenario),
             scale=1,
             decimals=1) |>
  opt_row_striping()

```



## Construct risk measures from pension model results

### Functions to implement Gang's risk measures

Put the functions here for now. Later put them in a separate file.

-   **VaR_loss**: Worst (alpha percentile) asset loss at the end of year t (e.g., 5)


```{r}
#| label: risk-functions
#| output: false

# https://github.com/gchen3/pensionALM/blob/main/alm.R

# Using simulation method to calculate VaR_loss, VaR_erc, VaR_uaal at 95% and 99% over t time period
# Note: Monte Carlo simulation method for VaR: Under the Monte Carlo method, Value at Risk is calculated by randomly 
# creating a number of scenarios for future rates to estimate the change in value for each scenario, 
# and then calculating the VaR according to the worst losses.

# test data
test <- result |> 
  filter(scenario=="baseline", porttype=="highequity", version=="model") |> 
  select(scenario, porttype, version, mean_logreturn, sd_logreturn, penmod) |> 
  unnest(penmod)

VaR_loss <- function(alpha, t, res) {
  # Worst (alpha percentile) asset loss at the end of year 5
  res_cut <- res |> filter(year==t)
  assets_tail <- quantile(res_cut$assets, (1-alpha)) # assets at the tail
  assets_initial <- res$assets[1] # first simulation in first year
  
  VaR_loss <-assets_tail - assets_initial
  VaR_loss_per <- VaR_loss / assets_initial # asset % reduction in year t at 1-alpha percentile
  
  return(VaR_loss_per)
  # VaR_loss(alpha=0.95, t=2, res=test)
  }


VaR_erc <- function(alpha, t, res) {
  res_cut <- res |> filter(year==t) # data in year t
  erc_tail <- quantile(res_cut$contrib, alpha) # contribution at alpha percentile
  erc_initial <- res$contrib[1] # initial contribution
  
  VaR_erc_jump <- erc_tail - erc_initial
  VaR_erc_jump_per <-  VaR_erc_jump / erc_initial # percentage jump in erc at alpha percentile in year t

  # revisit whether to return all these values  
  # output <- list(erc_tail=erc_tail, 
  #                VaR_erc_jump=VaR_erc_jump, 
  #                VaR_erc_jump_per=VaR_erc_jump_per)
  
  output <- VaR_erc_jump_per # for now, return a scalar
  
  return(output)
  # VaR_erc(alpha=0.95, t=10, res=test)
}


VaR_uaal <- function(alpha, t, res) {
  res_cut <- res |> filter(year==t)
  VaR_fr <- quantile(res_cut$fr, (1-alpha)) # fr at the 1-alpha percentile
  # just return the VaR_fr since VaR_uaal is easily computable if desired
  return(VaR_fr)
  # VaR_uaal(alpha=0.95, t=10, res=test)
}


prob_fr <- function(fr_threshold, t, res) {
  # Probability of funded ratio falling below x% at the end of t years
  
  res_cut <- res |> filter(year==t)
  n_below <- sum(res_cut$fr < fr_threshold)
  n_percent = n_below / nrow(res_cut)
  return(n_percent)
  # prob_fr(fr_threshold=0.8, t=5, res=test)
 }


prob_erc <- function(erc_threshold, t, res) {
  # Probability of contribution rate higher than x% of payroll at the end of t years
  # See CalPERS "Probability of Employer Contribution Rates Exceeding Given Level (at any point in next 30 years)"
  
  res_cut <- res |> 
    filter(year==t) |> 
    mutate(erc_rate= contrib / payroll)
  
  n_above <- sum(res_cut$erc_rate > erc_threshold)
  n_percent <- n_above / nrow(res_cut)
  return(n_percent)
  # prob_erc(erc_threshold=0.30, t=4, res=test)
}


```

## Calculate risk measures

```{r}
#| label: risk-measures
#| output: false

riskmeasures1 <- result |> 
  select(-c(irmat, mean_rnorm, sd_rnorm)) |> 
  # filter(scenario %in% c("baseline", "phi_m.05")) |> 
  unnest(col=penmod) |> 
  summarise(vloss_a95t10 = VaR_loss(alpha=0.95, t=10, res=pick(everything())),
            verc_a95t10 = VaR_erc(alpha=0.95, t=10, res=pick(everything())),
            vuaal_a95t10 = VaR_uaal(alpha=0.95, t=10, res=pick(everything())),
            probfr_fr70t10 = prob_fr(fr_threshold=0.7, t=10, res=test),
            proberc_erc20t10 = prob_erc(erc_threshold=0.20, t=10, res=test),
            .by=c(scenario, porttype, version))

riskmeasures <- riskmeasures1 |> 
  pivot_longer(-c(scenario, porttype, version),
               names_to = "measure") |> 
  pivot_wider(names_from = version) |> 
  relocate(model, .after = rnormal) |> 
  relocate(measure) |> 
  mutate(diff=model - rnormal) |> 
  arrange(measure, scenario, porttype)

riskmeasures

```

## Tables summarizing risk measures


### High equity portfolios

```{r}
#| label: heq-portfolios

riskmeasures |> 
  filter(porttype=="highequity", !str_starts(measure, "prob")) |> 
  gt()

```




