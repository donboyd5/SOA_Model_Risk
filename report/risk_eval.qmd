---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Risk evaluation

Analyze the pension model results previously created.

Summarize the results for each scenario (each row of the result tibble) by unnesting it to allow access to all of the sims and all of the years, calculating summary statistics such as percentiles of the funded ratio or more-sophisticated measures of risk (to come, after Gang's analysis).


## Setup

```{r}
#| label: setup
#| output: false

source(here::here("report", "_common.R"))

```


## Get saved pension model results

Get data, show the nested data, and show the head and tail of one scenario unnested.

```{r}
#| label: get-penmod-results

# result <- readRDS(here::here("data", "penmod_results.rds"))
result <- readRDS(here::here("data", "acli_normal_penmod.rds"))

result

result |> 
  select(-irmat) |> 
  unnest(penmod)

result |> 
  select(-irmat) |> 
  filter(scenario=="phi_m.05") |> 
  unnest(col=penmod) |> 
  ht()

result |> 
  select(-irmat) |> 
  filter(scenario %in% c("baseline", "phi_m.05")) |> 
  unnest(col=penmod) |> 
  filter(year==30) |> 
  summarise(frmdn=median(fr), .by=c(scenario, porttype)) |> 
  arrange(porttype)

```


## Construct risk measures from pension model results




## OLD: Construct risk measures from pension model results

For now, we just calculate the 10th, 50th, and 90th percentiles of the final-year funded ratio for each scenario. We also compute the arithmetic mean and standard deviation of the 10,000 investment returns in the final year.

As we move toward the final report, we'll develop summaries with meaningful risk measures.

```{r}
#| label: risk-measures

result |> 
  select(-ir_matrix) |> # we don't need the ir_matrix because all values are in the ir column of penmod
  unnest(cols = penmod) |> 
  group_by(scenario) |> 
  filter(year==max(year)) |> # for now, just look at results for the final year
  summarise(maxyear=max(year),
            nsims=max(sim),
            fr10=quantile(fr, probs=.10),
            fr90=quantile(fr, probs=.90),
            fr50=median(fr),
            irmean=mean(ir),
            irsd=sd(ir))

```



